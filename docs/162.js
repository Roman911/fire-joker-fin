"use strict";(self.webpackChunkbig_bass_bonanza_slots=self.webpackChunkbig_bass_bonanza_slots||[]).push([[162],{2067:(e,t,r)=>{r.d(t,{Ls:()=>n,_Q:()=>i,mA:()=>s});const n={name:"local-uniform-bit",vertex:{header:"\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "}},i={...n,vertex:{...n.vertex,header:n.vertex.header.replace("group(1)","group(2)")}},s={name:"local-uniform-bit",vertex:{header:"\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "}}},2162:(e,t,r)=>{r.r(t),r(4732),r(9010),r(8480),r(8928),r(5285),r(9305),r(5148),r(4243),r(2623),r(8723),r(7252),r(4980)},2289:(e,t,r)=>{r.d(t,{s:()=>i});var n=r(2048);function i(e,t){const{texture:r,bounds:i}=e,s=t._style._getFinalPadding();(0,n.y)(i,t._anchor,r);const o=t._anchor._x*s*2,a=t._anchor._y*s*2;i.minX-=s-o,i.minY-=s-a,i.maxX-=s-o,i.maxY-=s-a}},2558:(e,t,r)=>{r.d(t,{M:()=>s});var n=r(2437);const i=new(r(9636).c);function s(e,t,r,s){const o=i;o.minX=0,o.minY=0,o.maxX=e.width/s|0,o.maxY=e.height/s|0;const a=n.W.getOptimalTexture(o.width,o.height,s,!1);return a.source.uploadMethodId="image",a.source.resource=e,a.source.alphaMode="premultiply-alpha-on-upload",a.frame.width=t/s,a.frame.height=r/s,a.source.emit("update",a.source),a.updateUvs(),a}},2623:(e,t,r)=>{var n=r(8507),i=r(5589),s=r(2289),o=r(8422);class a extends o.K{constructor(e){super(),this.generatingTexture=!1,this.currentKey="--",this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{htmlText:e}=this._renderer;null===e.getReferenceCount(this.currentKey)?e.returnTexturePromise(this.texturePromise):e.decreaseReferenceCount(this.currentKey),this._renderer.runners.resolutionChange.remove(this),this.texturePromise=null,this._renderer=null}}class l{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const t=e._autoResolution?this._renderer.resolution:e.resolution;r.currentKey===e.styleKey&&e.resolution===t||this._updateGpuText(e).catch((e=>{console.error(e)})),e._didTextUpdate=!1,(0,s.s)(r,e)}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=t.texturePromise;t.texturePromise=null,t.generatingTexture=!0,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;let n=this._renderer.htmlText.getTexturePromise(e);r&&(n=n.finally((()=>{this._renderer.htmlText.decreaseReferenceCount(t.currentKey),this._renderer.htmlText.returnTexturePromise(r)}))),t.texturePromise=n,t.currentKey=e.styleKey,t.texture=await n;const i=e.renderGroup||e.parentRenderGroup;i&&(i.structureDidChange=!0),t.generatingTexture=!1,(0,s.s)(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new a(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.texture=i.g.EMPTY,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}l.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"htmlText"};var u=r(7608),h=r(2437),d=r(5099),c=r(1761),p=r(268),f=r(8655),g=r(2558);const m="http://www.w3.org/2000/svg",x="http://www.w3.org/1999/xhtml";class _{constructor(){this.svgRoot=document.createElementNS(m,"svg"),this.foreignObject=document.createElementNS(m,"foreignObject"),this.domElement=document.createElementNS(x,"div"),this.styleElement=document.createElementNS(x,"style");const{foreignObject:e,svgRoot:t,styleElement:r,domElement:n}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(n),this.image=c.e.get().createImage()}destroy(){this.svgRoot.remove(),this.foreignObject.remove(),this.styleElement.remove(),this.domElement.remove(),this.image.src="",this.image.remove(),this.svgRoot=null,this.foreignObject=null,this.styleElement=null,this.domElement=null,this.image=null,this.canvasAndContext=null}}var y=r(1979);const b=new Map;let v;class T{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===d.W.WEBGPU}getTexture(e){return this.getTexturePromise(e)}getManagedTexture(e){const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].promise;const r=this._buildTexturePromise(e).then((e=>(this._activeTextures[t].texture=e,e)));return this._activeTextures[t]={texture:null,promise:r,usageCount:1},r}getReferenceCount(e){return this._activeTextures[e]?.usageCount??null}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,0===t.usageCount&&(t.texture?this._cleanUp(t.texture):t.promise.then((e=>{t.texture=e,this._cleanUp(t.texture)})).catch((()=>{(0,p.R)("HTMLTextSystem: Failed to clean texture")})),this._activeTextures[e]=null))}getTexturePromise(e){return this._buildTexturePromise(e)}async _buildTexturePromise(e){const{text:t,style:r,resolution:n,textureStyle:i}=e,s=f.Z.get(_),o=function(e,t){const r=t.fontFamily,n=[],i={},s=e.match(/font-family:([^;"\s]+)/g);function o(e){i[e]||(n.push(e),i[e]=!0)}if(Array.isArray(r))for(let e=0;e<r.length;e++)o(r[e]);else o(r);s&&s.forEach((e=>{o(e.split(":")[1].trim())}));for(const e in t.tagStyles)o(t.tagStyles[e].fontFamily);return n}(t,r),a=await async function(e){const t=e.filter((e=>y.l.has(`${e}-and-url`))).map((e=>{if(!b.has(e)){const{entries:t}=y.l.get(`${e}-and-url`),r=[];t.forEach((t=>{const n=t.url,i=t.faces.map((e=>({weight:e.weight,style:e.style})));r.push(...i.map((t=>async function(e,t){const r=await async function(e){const t=await c.e.get().fetch(e),r=await t.blob(),n=new FileReader;return await new Promise(((e,t)=>{n.onloadend=()=>e(n.result),n.onerror=t,n.readAsDataURL(r)}))}(t);return`@font-face {\n        font-family: "${e.fontFamily}";\n        font-weight: ${e.fontWeight};\n        font-style: ${e.fontStyle};\n        src: url('${r}');\n    }`}({fontWeight:t.weight,fontStyle:t.style,fontFamily:e},n))))})),b.set(e,Promise.all(r).then((e=>e.join("\n"))))}return b.get(e)}));return(await Promise.all(t)).join("\n")}(o),l=function(e,t,r,n){n||(n=v||(v=new _));const{domElement:i,styleElement:s,svgRoot:o}=n;i.innerHTML=`<style>${t.cssStyle};</style><div style='padding:0'>${e}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),r&&(s.textContent=r),document.body.appendChild(o);const a=i.getBoundingClientRect();o.remove();const l=2*t.padding;return{width:a.width-l,height:a.height-l}}(t,r,a,s),h=Math.ceil(Math.ceil(Math.max(1,l.width)+2*r.padding)*n),d=Math.ceil(Math.ceil(Math.max(1,l.height)+2*r.padding)*n),p=s.image;p.width=2+(0|h),p.height=2+(0|d);const m=function(e,t,r,n,i){const{domElement:s,styleElement:o,svgRoot:a}=i;s.innerHTML=`<style>${t.cssStyle}</style><div style='padding:0;'>${e}</div>`,s.setAttribute("style",`transform: scale(${r});transform-origin: top left; display: inline-block`),o.textContent=n;const{width:l,height:u}=i.image;return a.setAttribute("width",l.toString()),a.setAttribute("height",u.toString()),(new XMLSerializer).serializeToString(a)}(t,r,n,a,s);await function(e,t,r){return new Promise((async n=>{r&&await new Promise((e=>setTimeout(e,100))),e.onload=()=>{n()},e.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(t)}`,e.crossOrigin="anonymous"}))}(p,m,function(){const{userAgent:e}=c.e.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(e)}()&&o.length>0);const x=p;let T;this._createCanvas&&(T=function(e,t){const r=u.N.getOptimalCanvasAndContext(e.width,e.height,t),{context:n}=r;return n.clearRect(0,0,e.width,e.height),n.drawImage(e,0,0),r}(p,n));const C=(0,g.M)(T?T.canvas:x,p.width-2,p.height-2,n);return i&&(C.source.style=i),this._createCanvas&&(this._renderer.texture.initSource(C.source),u.N.returnCanvasAndContext(T)),f.Z.return(s),C}returnTexturePromise(e){e.then((e=>{this._cleanUp(e)})).catch((()=>{(0,p.R)("HTMLTextSystem: Failed to clean texture")}))}_cleanUp(e){h.W.returnTexture(e,!0),e.source.resource=null,e.source.uploadMethodId="unknown"}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexturePromise(this._activeTextures[e].promise);this._activeTextures=null}}T.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"htmlText"},n.XO.add(T),n.XO.add(l)},2760:(e,t,r)=>{function n(e,t,r){const n=(e>>24&255)/255;t[r++]=(255&e)/255*n,t[r++]=(e>>8&255)/255*n,t[r++]=(e>>16&255)/255*n,t[r++]=n}r.d(t,{V:()=>n})},4243:(e,t,r)=>{var n=r(8507),i=r(1979),s=r(4670),o=r(4985),a=r(8288);class l extends o.l{constructor(e){e instanceof a.T&&(e={context:e});const{context:t,roundPixels:r,...n}=e||{};super({label:"Graphics",...n}),this.renderPipeId="graphics",this._context=t||(this._ownedContext=new a.T),this._context.on("update",this.onViewUpdate,this),this.didViewUpdate=!0,this.allowChildren=!1,this.roundPixels=r??!1}set context(e){e!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=e,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}updateBounds(){}containsPoint(e){return this._context.containsPoint(e)}destroy(e){this._ownedContext&&!e?this._ownedContext.destroy(e):!0!==e&&!0!==e?.context||this._context.destroy(e),this._ownedContext=null,this._context=null,super.destroy(e)}_callContextMethod(e,t){return this.context[e](...t),this}setFillStyle(...e){return this._callContextMethod("setFillStyle",e)}setStrokeStyle(...e){return this._callContextMethod("setStrokeStyle",e)}fill(...e){return this._callContextMethod("fill",e)}stroke(...e){return this._callContextMethod("stroke",e)}texture(...e){return this._callContextMethod("texture",e)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(...e){return this._callContextMethod("arc",e)}arcTo(...e){return this._callContextMethod("arcTo",e)}arcToSvg(...e){return this._callContextMethod("arcToSvg",e)}bezierCurveTo(...e){return this._callContextMethod("bezierCurveTo",e)}closePath(){return this._callContextMethod("closePath",[])}ellipse(...e){return this._callContextMethod("ellipse",e)}circle(...e){return this._callContextMethod("circle",e)}path(...e){return this._callContextMethod("path",e)}lineTo(...e){return this._callContextMethod("lineTo",e)}moveTo(...e){return this._callContextMethod("moveTo",e)}quadraticCurveTo(...e){return this._callContextMethod("quadraticCurveTo",e)}rect(...e){return this._callContextMethod("rect",e)}roundRect(...e){return this._callContextMethod("roundRect",e)}poly(...e){return this._callContextMethod("poly",e)}regularPoly(...e){return this._callContextMethod("regularPoly",e)}roundPoly(...e){return this._callContextMethod("roundPoly",e)}roundShape(...e){return this._callContextMethod("roundShape",e)}filletRect(...e){return this._callContextMethod("filletRect",e)}chamferRect(...e){return this._callContextMethod("chamferRect",e)}star(...e){return this._callContextMethod("star",e)}svg(...e){return this._callContextMethod("svg",e)}restore(...e){return this._callContextMethod("restore",e)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(...e){return this._callContextMethod("rotate",e)}scaleTransform(...e){return this._callContextMethod("scale",e)}setTransform(...e){return this._callContextMethod("setTransform",e)}transform(...e){return this._callContextMethod("transform",e)}translateTransform(...e){return this._callContextMethod("translate",e)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(e){this._context.fillStyle=e}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(e){this._context.strokeStyle=e}clone(e=!1){return e?new l(this._context.clone()):(this._ownedContext=null,new l(this._context))}lineStyle(e,t,r){(0,s.t6)(s.lj,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const n={};return e&&(n.width=e),t&&(n.color=t),r&&(n.alpha=r),this.context.strokeStyle=n,this}beginFill(e,t){(0,s.t6)(s.lj,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return void 0!==e&&(r.color=e),void 0!==t&&(r.alpha=t),this.context.fillStyle=r,this}endFill(){(0,s.t6)(s.lj,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const e=this.context.strokeStyle;return e.width===a.T.defaultStrokeStyle.width&&e.color===a.T.defaultStrokeStyle.color&&e.alpha===a.T.defaultStrokeStyle.alpha||this.context.stroke(),this}drawCircle(...e){return(0,s.t6)(s.lj,"Graphics#drawCircle has been renamed to Graphics#circle"),this._callContextMethod("circle",e)}drawEllipse(...e){return(0,s.t6)(s.lj,"Graphics#drawEllipse has been renamed to Graphics#ellipse"),this._callContextMethod("ellipse",e)}drawPolygon(...e){return(0,s.t6)(s.lj,"Graphics#drawPolygon has been renamed to Graphics#poly"),this._callContextMethod("poly",e)}drawRect(...e){return(0,s.t6)(s.lj,"Graphics#drawRect has been renamed to Graphics#rect"),this._callContextMethod("rect",e)}drawRoundedRect(...e){return(0,s.t6)(s.lj,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect"),this._callContextMethod("roundRect",e)}drawStar(...e){return(0,s.t6)(s.lj,"Graphics#drawStar has been renamed to Graphics#star"),this._callContextMethod("star",e)}}var u=r(4016),h=r(9313),d=r(5611),c=r(4459),p=r(4e3),f=r(6665),g=r(6040),m=r(8475),x=r(5811);const _={name:"local-uniform-msdf-bit",vertex:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "},fragment:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         ",main:"\n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        "}},y={name:"local-uniform-msdf-bit",vertex:{header:"\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "},fragment:{header:"\n            uniform float uDistance;\n         ",main:"\n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        "}},b={name:"msdf-bit",fragment:{header:"\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n\n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n\n            }\n        "}},v={name:"msdf-bit",fragment:{header:"\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n\n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n            }\n        "}};let T,C;class w extends m.M{constructor(e){const t=new x.k({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new h.u,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}});T??(T=(0,d.v)({name:"sdf-shader",bits:[c.F,(0,p._)(e),_,b,f.b]})),C??(C=(0,d.I)({name:"sdf-shader",bits:[c.a,(0,p.P)(e),y,v,f.m]})),super({glProgram:C,gpuProgram:T,resources:{localUniforms:t,batchSamplers:(0,g.n)(e)}})}}var S=r(1312),P=r(2763);class R extends l{destroy(){this.context.customShader&&this.context.customShader.destroy(),super.destroy()}}class M{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);U(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}updateRenderable(e){const t=this._getGpuBitmapText(e);U(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,n=S.c.getFont(e.text,e._style);r.clear(),"none"!==n.distanceField.type&&(r.customShader||(r.customShader=new w(this._renderer.limits.maxBatchableTextures)));const i=u.P.graphemeSegmenter(e.text),s=e._style;let o=n.baseLineOffset;const a=(0,P.Z)(i,s,n,!0),l=s.padding,h=a.scale;let d=a.width,c=a.height+a.offsetY;s._stroke&&(d+=s._stroke.width/h,c+=s._stroke.width/h),r.translate(-e._anchor._x*d-l,-e._anchor._y*c-l).scale(h,h);const p=n.applyFillAsTint?s._fill.color:16777215;let f=n.fontMetrics.fontSize,g=n.lineHeight;s.lineHeight&&(f=s.fontSize/h,g=s.lineHeight/h);let m=(g-f)/2;m-n.baseLineOffset<0&&(m=0);for(let e=0;e<a.lines.length;e++){const t=a.lines[e];for(let e=0;e<t.charPositions.length;e++){const i=t.chars[e],s=n.chars[i];if(s?.texture){const n=s.texture;r.texture(n,p||"black",Math.round(t.charPositions[e]+s.xOffset),Math.round(o+s.yOffset+m),n.orig.width,n.orig.height)}}o+=g}}_getGpuBitmapText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new R;return e._gpuData[this._renderer.uid]=t,this._updateContext(e,t),t}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,n=i.l.get(`${r}-bitmap`),{a:s,b:o,c:a,d:l}=e.groupTransform,u=Math.sqrt(s*s+o*o),h=Math.sqrt(a*a+l*l),d=(Math.abs(u)+Math.abs(h))/2,c=n.baseRenderedFontSize/e._style.fontSize,p=d*n.distanceField.range*(1/c);t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){this._renderer=null}}function U(e,t){t.groupTransform=e.groupTransform,t.groupColorAlpha=e.groupColorAlpha,t.groupColor=e.groupColor,t.groupBlendMode=e.groupBlendMode,t.globalDisplayStatus=e.globalDisplayStatus,t.groupTransform=e.groupTransform,t.localDisplayStatus=e.localDisplayStatus,t.groupAlpha=e.groupAlpha,t._roundPixels=e._roundPixels}M.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"bitmapText"},n.XO.add(M)},4732:(e,t,r)=>{var n=r(8507);class i{static init(e){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame((()=>this.resize())))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;let e,t;if(this._cancelResize(),this._resizeTo===globalThis.window)e=globalThis.innerWidth,t=globalThis.innerHeight;else{const{clientWidth:r,clientHeight:n}=this._resizeTo;e=r,t=n}this.renderer.resize(e,t),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}i.extension=n.Ag.Application;var s=r(4458),o=r(7309);class a{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,s.d.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?o.R.shared:new o.R,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}a.extension=n.Ag.Application,n.XO.add(i),n.XO.add(a)},4980:(e,t,r)=>{var n=r(8507);class i{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){"pushFilter"===e.action?this._renderer.filter.push(e):"popFilter"===e.action&&this._renderer.filter.pop()}destroy(){this._renderer=null}}i.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"filter"};var s=r(9313),o=r(3513),a=r(6011),l=r(5811),u=r(5589),h=r(2437),d=r(5099),c=r(9636);const p=new s.u;var f=r(268);const g=new a.V({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:8,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class m{constructor(){this.skip=!1,this.inputTexture=null,this.backTexture=null,this.filters=null,this.bounds=new c.c,this.container=null,this.blendRequired=!1,this.outputRenderSurface=null,this.globalFrame={x:0,y:0,width:0,height:0}}}class x{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new l.k({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new o.T({}),this.renderer=e}get activeBackTexture(){return this._activeFilterData?.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters,n=this._pushFilterData();n.skip=!1,n.filters=r,n.container=e.container,n.outputRenderSurface=t.renderTarget.renderSurface;const i=t.renderTarget.renderTarget.colorTexture.source,s=i.resolution,o=i.antialias;if(0===r.length)return void(n.skip=!0);const a=n.bounds;if(this._calculateFilterArea(e,a),this._calculateFilterBounds(n,t.renderTarget.rootViewPort,o,s,1),n.skip)return;const l=this._getPreviousFilterData(),u=this._findFilterResolution(s);let h=0,d=0;l&&(h=l.bounds.minX,d=l.bounds.minY),this._calculateGlobalFrame(n,h,d,u,i.width,i.height),this._setupFilterTextures(n,a,t,l)}generateFilteredTexture({texture:e,filters:t}){const r=this._pushFilterData();this._activeFilterData=r,r.skip=!1,r.filters=t;const n=e.source,i=n.resolution,s=n.antialias;if(0===t.length)return r.skip=!0,e;const o=r.bounds;if(o.addRect(e.frame),this._calculateFilterBounds(r,o.rectangle,s,i,0),r.skip)return e;const a=i;this._calculateGlobalFrame(r,0,0,a,n.width,n.height),r.outputRenderSurface=h.W.getOptimalTexture(o.width,o.height,r.resolution,r.antialias),r.backTexture=u.g.EMPTY,r.inputTexture=e,this.renderer.renderTarget.finishRenderPass(),this._applyFiltersToTexture(r,!0);const l=r.outputRenderSurface;return l.source.alphaMode="premultiplied-alpha",l}pop(){const e=this.renderer,t=this._popFilterData();t.skip||(e.globalUniforms.pop(),e.renderTarget.finishRenderPass(),this._activeFilterData=t,this._applyFiltersToTexture(t,!1),t.blendRequired&&h.W.returnTexture(t.backTexture),h.W.returnTexture(t.inputTexture))}getBackTexture(e,t,r){const n=e.colorTexture.source._resolution,i=h.W.getOptimalTexture(t.width,t.height,n,!1);let s=t.minX,o=t.minY;r&&(s-=r.minX,o-=r.minY),s=Math.floor(s*n),o=Math.floor(o*n);const a=Math.ceil(t.width*n),l=Math.ceil(t.height*n);return this.renderer.renderTarget.copyToTexture(e,i,{x:s,y:o},{width:a,height:l},{x:0,y:0}),i}applyFilter(e,t,r,n){const i=this.renderer,s=this._activeFilterData,o=s.outputRenderSurface===r,a=i.renderTarget.rootRenderTarget.colorTexture.source._resolution,l=this._findFilterResolution(a);let u=0,h=0;if(o){const e=this._findPreviousFilterOffset();u=e.x,h=e.y}this._updateFilterUniforms(t,r,s,u,h,l,o,n),this._setupBindGroupsAndRender(e,t,i)}calculateSpriteMatrix(e,t){const r=this._activeFilterData,n=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(s.u.shared),o=t.renderGroup||t.parentRenderGroup;return o&&o.cacheToLocalTransform&&i.prepend(o.cacheToLocalTransform),i.invert(),n.prepend(i),n.scale(1/t.texture.orig.width,1/t.texture.orig.height),n.translate(t.anchor.x,t.anchor.y),n}destroy(){}_setupBindGroupsAndRender(e,t,r){if(r.renderPipes.uniformBatch){const e=r.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);this._globalFilterBindGroup.setResource(e,0)}else this._globalFilterBindGroup.setResource(this._filterGlobalUniforms,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,r.encoder.draw({geometry:g,shader:e,state:e._state,topology:"triangle-list"}),r.type===d.W.WEBGL&&r.renderTarget.finishRenderPass()}_setupFilterTextures(e,t,r,n){if(e.backTexture=u.g.EMPTY,e.inputTexture=h.W.getOptimalTexture(t.width,t.height,e.resolution,e.antialias),e.blendRequired){r.renderTarget.finishRenderPass();const i=r.renderTarget.getRenderTarget(e.outputRenderSurface);e.backTexture=this.getBackTexture(i,t,n?.bounds)}r.renderTarget.bind(e.inputTexture,!0),r.globalUniforms.push({offset:t})}_calculateGlobalFrame(e,t,r,n,i,s){const o=e.globalFrame;o.x=t*n,o.y=r*n,o.width=i*n,o.height=s*n}_updateFilterUniforms(e,t,r,n,i,s,o,a){const l=this._filterGlobalUniforms.uniforms,h=l.uOutputFrame,d=l.uInputSize,c=l.uInputPixel,p=l.uInputClamp,f=l.uGlobalFrame,g=l.uOutputTexture;o?(h[0]=r.bounds.minX-n,h[1]=r.bounds.minY-i):(h[0]=0,h[1]=0),h[2]=e.frame.width,h[3]=e.frame.height,d[0]=e.source.width,d[1]=e.source.height,d[2]=1/d[0],d[3]=1/d[1],c[0]=e.source.pixelWidth,c[1]=e.source.pixelHeight,c[2]=1/c[0],c[3]=1/c[1],p[0]=.5*c[2],p[1]=.5*c[3],p[2]=e.frame.width*d[2]-.5*c[2],p[3]=e.frame.height*d[3]-.5*c[3];const m=this.renderer.renderTarget.rootRenderTarget.colorTexture;f[0]=n*s,f[1]=i*s,f[2]=m.source.width*s,f[3]=m.source.height*s,t instanceof u.g&&(t.source.resource=null);const x=this.renderer.renderTarget.getRenderTarget(t);this.renderer.renderTarget.bind(t,!!a),t instanceof u.g?(g[0]=t.frame.width,g[1]=t.frame.height):(g[0]=x.width,g[1]=x.height),g[2]=x.isRoot?-1:1,this._filterGlobalUniforms.update()}_findFilterResolution(e){let t=this._filterStackIndex-1;for(;t>0&&this._filterStack[t].skip;)--t;return t>0&&this._filterStack[t].inputTexture?this._filterStack[t].inputTexture.source._resolution:e}_findPreviousFilterOffset(){let e=0,t=0,r=this._filterStackIndex;for(;r>0;){r--;const n=this._filterStack[r];if(!n.skip){e=n.bounds.minX,t=n.bounds.minY;break}}return{x:e,y:t}}_calculateFilterArea(e,t){if(e.renderables?function(e,t){t.clear();const r=t.matrix;for(let r=0;r<e.length;r++){const n=e[r];if(n.globalDisplayStatus<7)continue;const i=n.renderGroup??n.parentRenderGroup;t.matrix=i?.isCachedAsTexture?p.copyFrom(i.textureOffsetInverseTransform).append(n.worldTransform):i?._parentCacheAsTextureRenderGroup?p.copyFrom(i._parentCacheAsTextureRenderGroup.inverseWorldTransform).append(n.groupTransform):n.worldTransform,t.addBounds(n.bounds)}t.matrix=r}(e.renderables,t):e.filterEffect.filterArea?(t.clear(),t.addRect(e.filterEffect.filterArea),t.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,t),e.container){const r=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;r&&t.applyMatrix(r)}}_applyFiltersToTexture(e,t){const r=e.inputTexture,n=e.bounds,i=e.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(e.backTexture.source,3),1===i.length)i[0].apply(this,r,e.outputRenderSurface,t);else{let r=e.inputTexture;const s=h.W.getOptimalTexture(n.width,n.height,r.source._resolution,!1);let o=s,a=0;for(a=0;a<i.length-1;++a){i[a].apply(this,r,o,!0);const e=r;r=o,o=e}i[a].apply(this,r,e.outputRenderSurface,t),h.W.returnTexture(s)}}_calculateFilterBounds(e,t,r,n,i){const s=this.renderer,o=e.bounds,a=e.filters;let l=1/0,u=0,h=!0,d=!1,c=!1,p=!0;for(let e=0;e<a.length;e++){const t=a[e];if(l=Math.min(l,"inherit"===t.resolution?n:t.resolution),u+=t.padding,"off"===t.antialias?h=!1:"inherit"===t.antialias&&h&&(h=r),t.clipToViewport||(p=!1),!(t.compatibleRenderers&s.type)){c=!1;break}if(t.blendRequired&&!(s.backBuffer?.useBackBuffer??1)){(0,f.R)("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),c=!1;break}c=t.enabled||c,d||(d=t.blendRequired)}c?(p&&o.fitBounds(0,t.width/n,0,t.height/n),o.scale(l).ceil().scale(1/l).pad((0|u)*i),o.isPositive?(e.antialias=h,e.resolution=l,e.blendRequired=d):e.skip=!0):e.skip=!0}_popFilterData(){return this._filterStackIndex--,this._filterStack[this._filterStackIndex]}_getPreviousFilterData(){let e,t=this._filterStackIndex-1;for(;t>0&&(t--,e=this._filterStack[t],e.skip););return e}_pushFilterData(){let e=this._filterStack[this._filterStackIndex];return e||(e=this._filterStack[this._filterStackIndex]=new m),this._filterStackIndex++,e}}x.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem],name:"filter"},n.XO.add(x),n.XO.add(i)},5060:(e,t,r)=>{r.d(t,{u:()=>l});var n=r(949),i=r(1132),s=r(6011),o=r(4670);const a=class e extends s.V{constructor(...t){let r=t[0]??{};r instanceof Float32Array&&((0,o.t6)(o.lj,"use new MeshGeometry({ positions, uvs, indices }) instead"),r={positions:r,uvs:t[1],indices:t[2]}),r={...e.defaultOptions,...r};const s=r.positions||new Float32Array([0,0,1,0,1,1,0,1]);let a=r.uvs;a||(a=r.positions?new Float32Array(s.length):new Float32Array([0,0,1,0,1,1,0,1]));const l=r.indices||new Uint32Array([0,1,2,0,2,3]),u=r.shrinkBuffersToFit;super({attributes:{aPosition:{buffer:new n.h({data:s,label:"attribute-mesh-positions",shrinkToFit:u,usage:i.S.VERTEX|i.S.COPY_DST}),format:"float32x2",stride:8,offset:0},aUV:{buffer:new n.h({data:a,label:"attribute-mesh-uvs",shrinkToFit:u,usage:i.S.VERTEX|i.S.COPY_DST}),format:"float32x2",stride:8,offset:0}},indexBuffer:new n.h({data:l,label:"index-mesh-buffer",shrinkToFit:u,usage:i.S.INDEX|i.S.COPY_DST}),topology:r.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};a.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let l=a},5148:(e,t,r)=>{var n=r(8507),i=r(2289),s=r(8422);class o extends s.K{constructor(e){super(),this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{canvasText:e}=this._renderer;e.getReferenceCount(this.currentKey)>0?e.decreaseReferenceCount(this.currentKey):this.texture&&e.returnTexture(this.texture),this._renderer.runners.resolutionChange.remove(this),this._renderer=null}}class a{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r||e._didTextUpdate}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const t=e._autoResolution?this._renderer.resolution:e.resolution;r.currentKey===e.styleKey&&e.resolution===t||this._updateGpuText(e),e._didTextUpdate=!1}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}_updateGpuText(e){const t=this._getGpuText(e);t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,t.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e.styleKey,(0,i.s)(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new o(this._renderer);return t.currentKey="--",t.renderable=e,t.transform=e.groupTransform,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}a.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"text"};var l=r(2437),u=r(218),h=r(4670),d=r(8291),c=r(2558),p=r(2577),f=r(9252),g=r(7608),m=r(1761),x=r(9939);let _=null,y=null;function b(e,t,r){for(let n=0,i=4*r*t;n<t;++n,i+=4)if(0!==e[i+3])return!1;return!0}function v(e,t,r,n,i){const s=4*t;for(let t=n,o=n*s+4*r;t<=i;++t,o+=s)if(0!==e[o+3])return!1;return!0}function T(...e){let t=e[0];t.canvas||(t={canvas:e[0],resolution:e[1]});const{canvas:r}=t,n=Math.min(t.resolution??1,1),i=t.width??r.width,s=t.height??r.height;let o=t.output;if(function(e,t){_||(_=m.e.get().createCanvas(256,128),y=_.getContext("2d",{willReadFrequently:!0}),y.globalCompositeOperation="copy",y.globalAlpha=1),(_.width<e||_.height<t)&&(_.width=(0,x.U5)(e),_.height=(0,x.U5)(t))}(i,s),!y)throw new TypeError("Failed to get canvas 2D context");y.drawImage(r,0,0,i,s,0,0,i*n,s*n);const a=y.getImageData(0,0,i,s).data;let l=0,u=0,h=i-1,d=s-1;for(;u<s&&b(a,i,u);)++u;if(u===s)return f.M.EMPTY;for(;b(a,i,d);)--d;for(;v(a,i,l,u,d);)++l;for(;v(a,i,h,u,d);)--h;return++h,++d,y.globalCompositeOperation="source-over",y.strokeRect(l,u,h-l,d-u),y.globalCompositeOperation="copy",o??(o=new f.M),o.set(l/n,u/n,(h-l)/n,(d-u)/n),o}var C=r(4016),w=r(1242),S=r(3548);const P=new f.M,R=new class{getCanvasAndContext(e){const{text:t,style:r,resolution:n=1}=e,i=r._getFinalPadding(),s=C.P.measureText(t||" ",r),o=Math.ceil(Math.ceil(Math.max(1,s.width)+2*i)*n),a=Math.ceil(Math.ceil(Math.max(1,s.height)+2*i)*n),l=g.N.getOptimalCanvasAndContext(o,a);return this._renderTextToCanvas(t,r,i,n,l),{canvasAndContext:l,frame:r.trim?T({canvas:l.canvas,width:o,height:a,resolution:1,output:P}):P.set(0,0,o,a)}}returnCanvasAndContext(e){g.N.returnCanvasAndContext(e)}_renderTextToCanvas(e,t,r,n,i){const{canvas:s,context:o}=i,a=(0,w.Z)(t),l=C.P.measureText(e||" ",t),u=l.lines,h=l.lineHeight,d=l.lineWidths,c=l.maxLineWidth,f=l.fontProperties,g=s.height;if(o.resetTransform(),o.scale(n,n),o.textBaseline=t.textBaseline,t._stroke?.width){const e=t._stroke;o.lineWidth=e.width,o.miterLimit=e.miterLimit,o.lineJoin=e.join,o.lineCap=e.cap}let m,x;o.font=a;const _=t.dropShadow?2:1;for(let e=0;e<_;++e){const s=t.dropShadow&&0===e,a=s?Math.ceil(Math.max(1,g)+2*r):0,_=a*n;if(s){o.fillStyle="black",o.strokeStyle="black";const e=t.dropShadow,r=e.color,i=e.alpha;o.shadowColor=p.Q.shared.setValue(r).setAlpha(i).toRgbaString();const s=e.blur*n,a=e.distance*n;o.shadowBlur=s,o.shadowOffsetX=Math.cos(e.angle)*a,o.shadowOffsetY=Math.sin(e.angle)*a+_}else{if(o.fillStyle=t._fill?(0,S.r)(t._fill,o,l,2*r):null,t._stroke?.width){const e=.5*t._stroke.width+2*r;o.strokeStyle=(0,S.r)(t._stroke,o,l,e)}o.shadowColor="black"}let y=(h-f.fontSize)/2;h-f.fontSize<0&&(y=0);const b=t._stroke?.width??0;for(let e=0;e<u.length;e++)m=b/2,x=b/2+e*h+f.ascent+y,"right"===t.align?m+=c-d[e]:"center"===t.align&&(m+=(c-d[e])/2),t._stroke?.width&&this._drawLetterSpacing(u[e],t,i,m+r,x+r-a,!0),void 0!==t._fill&&this._drawLetterSpacing(u[e],t,i,m+r,x+r-a)}}_drawLetterSpacing(e,t,r,n,i,s=!1){const{context:o}=r,a=t.letterSpacing;let l=!1;if(C.P.experimentalLetterSpacingSupported&&(C.P.experimentalLetterSpacing?(o.letterSpacing=`${a}px`,o.textLetterSpacing=`${a}px`,l=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),0===a||l)return void(s?o.strokeText(e,n,i):o.fillText(e,n,i));let u=n;const h=C.P.graphemeSegmenter(e);let d=o.measureText(e).width,c=0;for(let e=0;e<h.length;++e){const t=h[e];s?o.strokeText(t,u,i):o.fillText(t,u,i);let r="";for(let t=e+1;t<h.length;++t)r+=h[t];c=o.measureText(r).width,u+=d-c+a,d=c}}};class M{constructor(e){this._activeTextures={},this._renderer=e}getTexture(e,t,r,n){"string"==typeof e&&((0,h.t6)("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof d.x||(e.style=new d.x(e.style)),e.textureStyle instanceof u.n||(e.textureStyle=new u.n(e.textureStyle)),"string"!=typeof e.text&&(e.text=e.text.toString());const{text:i,style:s,textureStyle:o}=e,a=e.resolution??this._renderer.resolution,{frame:l,canvasAndContext:p}=R.getCanvasAndContext({text:i,style:s,resolution:a}),f=(0,c.M)(p.canvas,l.width,l.height,a);if(o&&(f.source.style=o),s.trim&&(l.pad(s.padding),f.frame.copyFrom(l),f.frame.scale(1/a),f.updateUvs()),s.filters){const e=this._applyFilters(f,s.filters);return this.returnTexture(f),R.returnCanvasAndContext(p),e}return this._renderer.texture.initSource(f._source),R.returnCanvasAndContext(p),f}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",l.W.returnTexture(e,!0)}renderTextToCanvas(){(0,h.t6)("8.10.0","CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead")}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const r=this.getTexture({text:e.text,style:e.style,resolution:e._resolution,textureStyle:e.textureStyle});return this._activeTextures[t]={texture:r,usageCount:1},r}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,0===t.usageCount&&(this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){return this._activeTextures[e]?.usageCount??0}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}_applyFilters(e,t){const r=this._renderer.renderTarget.renderTarget,n=this._renderer.filter.generateFilteredTexture({texture:e,filters:t});return this._renderer.renderTarget.bind(r,!1),n}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexture(this._activeTextures[e].texture);this._activeTextures=null}}M.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"canvasText"},n.XO.add(M),n.XO.add(a)},5285:(e,t,r)=>{var n=r(8507),i=r(9313),s=r(3513),o=r(5811),a=r(8639),l=r(2760),u=r(8734);class h{destroy(){}}class d{constructor(e,t){this.localUniforms=new o.k({uTransformMatrix:{value:new i.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new s.T({0:this.localUniforms}),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,n=e.batched;if(t.batched=n,r!==n)return!0;if(n){const r=e._geometry;if(r.indices.length!==t.indexSize||r.positions.length!==t.vertexSize)return t.indexSize=r.indices.length,t.vertexSize=r.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,n=this._getMeshData(e);if(e.didViewUpdate&&(n.indexSize=e._geometry.indices?.length,n.vertexSize=e._geometry.positions?.length),n.batched){const n=this._getBatchableMesh(e);n.setTexture(e._texture),n.geometry=e._geometry,r.addToBatch(n,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._getBatchableMesh(e);t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}execute(e){if(!e.isRenderable)return;e.state.blendMode=(0,a.i)(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),(0,l.V)(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new h),e._gpuData[this.renderer.uid].meshData||this._initMeshData(e)}_initMeshData(e){return e._gpuData[this.renderer.uid].meshData={batched:e.batched,indexSize:0,vertexSize:0},e._gpuData[this.renderer.uid].meshData}_getBatchableMesh(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new h),e._gpuData[this.renderer.uid].batchableMesh||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=new u.U;return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,e._gpuData[this.renderer.uid].batchableMesh=t,t}destroy(){this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}d.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"mesh"},n.XO.add(d)},7252:(e,t,r)=>{var n=r(8507),i=r(8734),s=r(4670),o=r(5060);const a=class e extends o.u{constructor(...e){super({});let t=e[0]??{};"number"==typeof t&&((0,s.t6)(s.lj,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(t){t={...e.defaultOptions,...t},this.verticesX=this.verticesX??t.verticesX,this.verticesY=this.verticesY??t.verticesY,this.width=this.width??t.width,this.height=this.height??t.height;const r=this.verticesX*this.verticesY,n=[],i=[],s=[],o=this.verticesX-1,a=this.verticesY-1,l=this.width/o,u=this.height/a;for(let e=0;e<r;e++){const t=e%this.verticesX,r=e/this.verticesX|0;n.push(t*l,r*u),i.push(t/o,r/a)}const h=o*a;for(let e=0;e<h;e++){const t=e%o,r=e/o|0,n=r*this.verticesX+t,i=r*this.verticesX+t+1,a=(r+1)*this.verticesX+t,l=(r+1)*this.verticesX+t+1;s.push(n,i,a,i,l,a)}this.buffers[0].data=new Float32Array(n),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};a.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let l=a;const u=class e extends l{constructor(t={}){super({width:(t={...e.defaultOptions,...t}).width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this._anchorX=e.anchor?.x,this._anchorY=e.anchor?.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:n,_rightWidth:i,_topHeight:s,_bottomHeight:o,_anchorX:a,_anchorY:l}=this,u=n+i,h=t>u?1:t/u,d=s+o,c=r>d?1:r/d,p=Math.min(h,c),f=a*t,g=l*r;e[0]=e[8]=e[16]=e[24]=-f,e[2]=e[10]=e[18]=e[26]=n*p-f,e[4]=e[12]=e[20]=e[28]=t-i*p-f,e[6]=e[14]=e[22]=e[30]=t-f,e[1]=e[3]=e[5]=e[7]=-g,e[9]=e[11]=e[13]=e[15]=s*p-g,e[17]=e[19]=e[21]=e[23]=r-o*p-g,e[25]=e[27]=e[29]=e[31]=r-g,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};u.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let h=u;class d extends i.U{constructor(){super(),this.geometry=new h}destroy(){this.geometry.destroy()}}class c{constructor(e){this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=e._gpuData[this._renderer.uid]=new d,r=t;return r.renderable=e,r.transform=e.groupTransform,r.texture=e._texture,r.roundPixels=this._renderer._roundPixels|e._roundPixels,e.didViewUpdate||this._updateBatchableSprite(e,r),t}destroy(){this._renderer=null}}c.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"nineSliceSprite"},n.XO.add(c)},8422:(e,t,r)=>{r.d(t,{K:()=>n});class n{constructor(){this.batcherName="default",this.topology="triangle-list",this.attributeSize=4,this.indexSize=6,this.packAsQuad=!0,this.roundPixels=0,this._attributeStart=0,this._batcher=null,this._batch=null}get blendMode(){return this.renderable.groupBlendMode}get color(){return this.renderable.groupColorAlpha}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.bounds=null}destroy(){}}},8723:(e,t,r)=>{var n=r(8507),i=r(8639),s=r(7547),o=r(5099),a=r(2760),l=r(8734),u=r(5060),h=r(9313),d=r(5611),c=r(2067),p=r(6665),f=r(8475),g=r(5811),m=r(5589);const x={name:"tiling-bit",vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "},fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            }\n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        "}},_={name:"tiling-bit",vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n\n        ",main:"\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "},fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ",main:"\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n\n        "}};let y,b;class v extends f.M{constructor(){y??(y=(0,d.v)({name:"tiling-sprite-shader",bits:[c.Ls,x,p.b]})),b??(b=(0,d.I)({name:"tiling-sprite-shader",bits:[c.mA,_,p.m]}));const e=new g.k({uMapCoord:{value:new h.u,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new h.u,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:b,gpuProgram:y,resources:{localUniforms:new g.k({uTransformMatrix:{value:new h.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:m.g.EMPTY.source,uSampler:m.g.EMPTY.source.style}})}updateUniforms(e,t,r,n,i,s){const o=this.resources.tilingUniforms,a=s.width,l=s.height,u=s.textureMatrix,h=o.uniforms.uTextureTransform;h.set(r.a*a/e,r.b*a/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),h.invert(),o.uniforms.uMapCoord=u.mapCoord,o.uniforms.uClampFrame=u.uClampFrame,o.uniforms.uClampOffset=u.uClampOffset,o.uniforms.uTextureTransform=h,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=n,o.uniforms.uSizeAnchor[3]=i,s&&(this.resources.uTexture=s.source,this.resources.uSampler=s.source.style)}}class T extends u.u{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}const C=new T;class w{constructor(){this.canBatch=!0,this.geometry=new u.u({indices:C.indices.slice(),positions:C.positions.slice(),uvs:C.uvs.slice()})}destroy(){this.geometry.destroy(),this.shader?.destroy()}}class S{constructor(e){this._state=s.U.default2d,this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const n=t.canBatch;if(n&&n===r){const{batchableMesh:r}=t;return!r._batcher.checkAndUpdateTexture(r,e.texture)}return r!==n}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const n=this._getTilingSpriteData(e),{geometry:i,canBatch:s}=n;if(s){n.batchableMesh||(n.batchableMesh=new l.U);const s=n.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),s.geometry=i,s.renderable=e,s.transform=e.groupTransform,s.setTexture(e._texture)),s.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(s,t)}else r.break(t),n.shader||(n.shader=new v),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._getTilingSpriteData(e);t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,(0,a.V)(e.groupColorAlpha,r.uColor,0),this._state.blendMode=(0,i.i)(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:C,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:r}=t;e.didViewUpdate&&this._updateBatchableMesh(e),r._batcher.updateElement(r)}else if(e.didViewUpdate){const{shader:r}=t;r.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}_getTilingSpriteData(e){return e._gpuData[this._renderer.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new w;return t.renderable=e,e._gpuData[this._renderer.uid]=t,t}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,n=e.texture.source.style;"repeat"!==n.addressMode&&(n.addressMode="repeat",n.update()),function(e,t){const r=e.texture,n=r.frame.width,i=r.frame.height;let s=0,o=0;e.applyAnchorToTexture&&(s=e.anchor.x,o=e.anchor.y),t[0]=t[6]=-s,t[2]=t[4]=1-s,t[1]=t[3]=-o,t[5]=t[7]=1-o;const a=h.u.shared;a.copyFrom(e._tileTransform.matrix),a.tx/=e.width,a.ty/=e.height,a.invert(),a.scale(e.width/n,e.height/i),function(e,t,r,n){let i=0;const s=e.length/2,o=n.a,a=n.b,l=n.c,u=n.d,h=n.tx,d=n.ty;for(r*=2;i<s;){const t=e[r],n=e[r+1];e[r]=o*t+l*n+h,e[r+1]=a*t+u*n+d,r+=2,i++}}(t,0,0,a)}(e,r.uvs),function(e,t){const r=e.anchor.x,n=e.anchor.y;t[0]=-r*e.width,t[1]=-n*e.height,t[2]=(1-r)*e.width,t[3]=-n*e.height,t[4]=(1-r)*e.width,t[5]=(1-n)*e.height,t[6]=-r*e.width,t[7]=(1-n)*e.height}(e,r.positions)}destroy(){this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let n=!0;return this._renderer.type===o.W.WEBGL&&(n=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(n||r.source.isPowerOfTwo),t.canBatch}}S.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"tilingSprite"},n.XO.add(S)},8734:(e,t,r)=>{r.d(t,{U:()=>n});class n{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const e=this.geometry.getBuffer("aUV"),t=e.data;let r=t;const n=this.texture.textureMatrix;return n.isSimple||(r=this._transformedUvs,this._textureMatrixUpdateId===n._updateID&&this._uvUpdateId===e._updateID||((!r||r.length<t.length)&&(r=this._transformedUvs=new Float32Array(t.length)),this._textureMatrixUpdateId=n._updateID,this._uvUpdateId=e._updateID,n.multiplyUvs(t,r))),r}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}},8928:(e,t,r)=>{var n=r(8507),i=r(6302),s=r(7547),o=r(8655),a=r(2760),l=r(6954);class u{constructor(){this.batches=[],this.batched=!1}destroy(){this.batches.forEach((e=>{o.Z.return(e)})),this.batches.length=0}}class h{constructor(e,t){this.state=s.U.for2d(),this.renderer=e,this._adaptor=t,this.renderer.runners.contextChange.add(this)}contextChange(){this._adaptor.contextChange(this.renderer)}validateRenderable(e){const t=e.context,r=!!e._gpuData,n=this.renderer.graphicsContext.updateGpuContext(t);return!(!n.isBatchable&&r===n.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._getGpuDataForRenderable(e).batches;for(let e=0;e<t.length;e++){const r=t[e];r._batcher.updateElement(r)}}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const i=n.resources.localUniforms.uniforms;i.uTransformMatrix=e.groupTransform,i.uRound=t._roundPixels|e._roundPixels,(0,a.V)(e.groupColorAlpha,i.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=this._getGpuDataForRenderable(e),r=this.renderer.graphicsContext.updateGpuContext(e.context);t.destroy(),r.isBatchable&&this._updateBatchesForRenderable(e,t)}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,n=this._getGpuDataForRenderable(e).batches;for(let e=0;e<n.length;e++){const i=n[e];r.addToBatch(i,t)}}_getGpuDataForRenderable(e){return e._gpuData[this.renderer.uid]||this._initGpuDataForRenderable(e)}_initGpuDataForRenderable(e){const t=new u;return e._gpuData[this.renderer.uid]=t,t}_updateBatchesForRenderable(e,t){const r=e.context,n=this.renderer.graphicsContext.getGpuContext(r),i=this.renderer._roundPixels|e._roundPixels;t.batches=n.batches.map((t=>{const r=o.Z.get(l.G);return t.copyTo(r),r.renderable=e,r.roundPixels=i,r}))}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null}}h.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"graphics"},n.XO.add(h),n.XO.add(i.GH)},9305:(e,t,r)=>{var n=r(8507);class i{execute(e,t){const r=e.state,n=e.renderer,i=t.shader||e.defaultShader;i.resources.uTexture=t.texture._source,i.resources.uniforms=e.localUniforms;const s=n.gl,o=e.getBuffers(t);n.shader.bind(i),n.state.set(r),n.geometry.bind(o.geometry,i.glProgram);const a=2===o.geometry.indexBuffer.data.BYTES_PER_ELEMENT?s.UNSIGNED_SHORT:s.UNSIGNED_INT;s.drawElements(s.TRIANGLES,6*t.particleChildren.length,a,0)}}var s=r(9313),o=r(5811),a=r(8639),l=r(7547),u=r(2760),h=r(949),d=r(1132),c=r(6011),p=r(8306),f=r(1460);function g(e,t=null){const r=6*e;if(r>65535?t||(t=new Uint32Array(r)):t||(t=new Uint16Array(r)),t.length!==r)throw new Error(`Out buffer length is incorrect, got ${t.length} and expected ${r}`);for(let e=0,n=0;e<r;e+=6,n+=4)t[e+0]=n+0,t[e+1]=n+1,t[e+2]=n+2,t[e+3]=n+0,t[e+4]=n+2,t[e+5]=n+3;return t}function m(e,t){const r=[];r.push("\n\n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            ");let n=0;for(const i in e){const s=e[i];t===s.dynamic&&(r.push(`offset = index + ${n}`),r.push(s.code),n+=(0,p.m)(s.format).stride/4)}r.push("\n            index += stride * 4;\n        }\n    "),r.unshift(`\n        var stride = ${n};\n    `);const i=r.join("\n");return new Function("ps","f32v","u32v",i)}class x{constructor(e){this._size=0,this._generateParticleUpdateCache={};const t=this._size=e.size??1e3,r=e.properties;let n=0,i=0;for(const e in r){const t=r[e],s=(0,p.m)(t.format);t.dynamic?i+=s.stride:n+=s.stride}this._dynamicStride=i/4,this._staticStride=n/4,this.staticAttributeBuffer=new f.u(4*t*n),this.dynamicAttributeBuffer=new f.u(4*t*i),this.indexBuffer=g(t);const s=new c.V;let o=0,a=0;this._staticBuffer=new h.h({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:d.S.VERTEX|d.S.COPY_DST}),this._dynamicBuffer=new h.h({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:d.S.VERTEX|d.S.COPY_DST});for(const e in r){const t=r[e],n=(0,p.m)(t.format);t.dynamic?(s.addAttribute(t.attributeName,{buffer:this._dynamicBuffer,stride:4*this._dynamicStride,offset:4*o,format:t.format}),o+=n.size):(s.addAttribute(t.attributeName,{buffer:this._staticBuffer,stride:4*this._staticStride,offset:4*a,format:t.format}),a+=n.size)}s.addIndex(this.indexBuffer);const l=this.getParticleUpdate(r);this._dynamicUpload=l.dynamicUpdate,this._staticUpload=l.staticUpdate,this.geometry=s}getParticleUpdate(e){const t=function(e){const t=[];for(const r in e){const n=e[r];t.push(r,n.code,n.dynamic?"d":"s")}return t.join("_")}(e);return this._generateParticleUpdateCache[t]||(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e)),this._generateParticleUpdateCache[t]}generateParticleUpdate(e){return function(e){return{dynamicUpdate:m(e,!0),staticUpdate:m(e,!1)}}(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,1.5*this._size|0),this.staticAttributeBuffer=new f.u(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new f.u(this._size*this._dynamicStride*4*4),this.indexBuffer=g(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const t=this.staticAttributeBuffer;this._staticUpload(e,t.float32View,t.uint32View),this._staticBuffer.setDataWithSize(t.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}var _=r(2577),y=r(9113),b=r(3012),v=r(8475),T=r(5589),C=r(218),w="\nstruct ParticleUniforms {\n  uTranslationMatrix:mat3x3<f32>,\n  uColor:vec4<f32>,\n  uRound:f32,\n  uResolution:vec2<f32>,\n};\n\nfn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32>\n{\n  return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\n\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\n@group(1) @binding(1) var uSampler : sampler;\n\nstruct VSOutput {\n    @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>,\n    @location(1) color : vec4<f32>,\n  };\n@vertex\nfn mainVertex(\n  @location(0) aVertex: vec2<f32>,\n  @location(1) aPosition: vec2<f32>,\n  @location(2) aUV: vec2<f32>,\n  @location(3) aColor: vec4<f32>,\n  @location(4) aRotation: f32,\n) -> VSOutput {\n  \n   let v = vec2(\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\n   ) + aPosition;\n\n   var position = vec4((uniforms.uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n   if(uniforms.uRound == 1.0) {\n       position = vec4(roundPixels(position.xy, uniforms.uResolution), position.zw);\n   }\n\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\n\n  return VSOutput(\n   position,\n   aUV,\n   vColor,\n  );\n}\n\n@fragment\nfn mainFragment(\n  @location(0) uv: vec2<f32>,\n  @location(1) color: vec4<f32>,\n  @builtin(position) position: vec4<f32>,\n) -> @location(0) vec4<f32> {\n\n    var sample = textureSample(uTexture, uSampler, uv) * color;\n   \n    return sample;\n}";class S extends v.M{constructor(){super({glProgram:y.M.from({vertex:"attribute vec2 aVertex;\nattribute vec2 aUV;\nattribute vec4 aColor;\n\nattribute vec2 aPosition;\nattribute float aRotation;\n\nuniform mat3 uTranslationMatrix;\nuniform float uRound;\nuniform vec2 uResolution;\nuniform vec4 uColor;\n\nvarying vec2 vUV;\nvarying vec4 vColor;\n\nvec2 roundPixels(vec2 position, vec2 targetSize)\n{       \n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\nvoid main(void){\n    float cosRotation = cos(aRotation);\n    float sinRotation = sin(aRotation);\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\n\n    vec2 v = vec2(x, y);\n    v = v + aPosition;\n\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    if(uRound == 1.0)\n    {\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n    }\n\n    vUV = aUV;\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\n}\n",fragment:"varying vec2 vUV;\nvarying vec4 vColor;\n\nuniform sampler2D uTexture;\n\nvoid main(void){\n    vec4 color = texture2D(uTexture, vUV) * vColor;\n    gl_FragColor = color;\n}"}),gpuProgram:b.B.from({fragment:{source:w,entryPoint:"mainFragment"},vertex:{source:w,entryPoint:"mainVertex"}}),resources:{uTexture:T.g.WHITE.source,uSampler:new C.n({}),uniforms:{uTranslationMatrix:{value:new s.u,type:"mat3x3<f32>"},uColor:{value:new _.Q(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class P{constructor(e,t){this.state=l.U.for2d(),this.localUniforms=new o.k({uTranslationMatrix:{value:new s.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new S,this.state=l.U.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return e._gpuData[this.renderer.uid]||this._initBuffer(e)}_initBuffer(e){return e._gpuData[this.renderer.uid]=new x({size:e.particleChildren.length,properties:e._properties}),e._gpuData[this.renderer.uid]}updateRenderable(e){}execute(e){const t=e.particleChildren;if(0===t.length)return;const r=this.renderer,n=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const i=this.state;n.update(t,e._childrenDirty),e._childrenDirty=!1,i.blendMode=(0,a.i)(e.blendMode,e.texture._source);const s=this.localUniforms.uniforms,o=s.uTranslationMatrix;e.worldTransform.copyTo(o),o.prepend(r.globalUniforms.globalUniformData.projectionMatrix),s.uResolution=r.globalUniforms.globalUniformData.resolution,s.uRound=r._roundPixels|e._roundPixels,(0,u.V)(e.groupColorAlpha,s.uColor,0),this.adaptor.execute(this,e)}destroy(){this.renderer=null,this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class R extends P{constructor(e){super(e,new i)}}R.extension={type:[n.Ag.WebGLPipes],name:"particle"};class M{execute(e,t){const r=e.renderer,n=t.shader||e.defaultShader;n.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),n.groups[1]=r.texture.getTextureBindGroup(t.texture);const i=e.state,s=e.getBuffers(t);r.encoder.draw({geometry:s.geometry,shader:t.shader||e.defaultShader,state:i,size:6*t.particleChildren.length})}}class U extends P{constructor(e){super(e,new M)}}U.extension={type:[n.Ag.WebGPUPipes],name:"particle"},n.XO.add(R),n.XO.add(U)}}]);